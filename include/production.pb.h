/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Wed Sep 18 09:52:01 2019. */

#ifndef PB_PROTO_PRODUCTION_PRODUCTION_PB_H_INCLUDED
#define PB_PROTO_PRODUCTION_PRODUCTION_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(126) Proto_Production_Tunnel_data_t;
typedef struct _Proto_Production_Tunnel {
    bool has_data;
    Proto_Production_Tunnel_data_t data;
/* @@protoc_insertion_point(struct:Proto_Production_Tunnel) */
} Proto_Production_Tunnel;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Proto_Production_Tunnel_init_default     {false, {0, {0}}}
#define Proto_Production_Tunnel_init_zero        {false, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define Proto_Production_Tunnel_data_tag         1

/* Struct field encoding specification for nanopb */
extern const pb_field_t Proto_Production_Tunnel_fields[2];

/* Maximum encoded size of messages (where known) */
#define Proto_Production_Tunnel_size             128

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PRODUCTION_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
